/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * FastAPI
 * OpenAPI spec version: 0.1.0
 */
import {
  z as zod
} from 'zod';


/**
 * Get all users with pagination and search - admin only
 * @summary Get All Users
 */
export const adminGetAllUsersQueryPageDefault = 1;export const adminGetAllUsersQueryLimitDefault = 50;
export const adminGetAllUsersQueryLimitMax = 100;


export const adminGetAllUsersQueryParams = zod.object({
  "page": zod.number().min(1).default(adminGetAllUsersQueryPageDefault).describe('Page number'),
  "limit": zod.number().min(1).max(adminGetAllUsersQueryLimitMax).default(adminGetAllUsersQueryLimitDefault).describe('Items per page'),
  "search": zod.string().or(zod.null()).optional().describe('Search in email, name')
})

export const adminGetAllUsersResponseDataItemIsAdminDefault = false;export const adminGetAllUsersResponseDataItemIsActiveDefault = true;

export const adminGetAllUsersResponse = zod.object({
  "data": zod.array(zod.object({
  "id": zod.string(),
  "username": zod.string(),
  "email": zod.string().or(zod.null()).optional(),
  "full_name": zod.string().or(zod.null()).optional(),
  "is_admin": zod.boolean().optional(),
  "is_active": zod.boolean().default(adminGetAllUsersResponseDataItemIsActiveDefault),
  "created_at": zod.string().datetime({}).or(zod.null()).optional(),
  "updated_at": zod.string().datetime({}).or(zod.null()).optional()
})),
  "total_count": zod.number(),
  "page": zod.number(),
  "limit": zod.number(),
  "total_pages": zod.number()
})

/**
 * Create new user - admin only
 * @summary Create User
 */
export const adminCreateUserBodyIsAdminDefault = false;export const adminCreateUserBodyIsActiveDefault = true;

export const adminCreateUserBody = zod.object({
  "email": zod.string(),
  "full_name": zod.string().or(zod.null()).optional(),
  "password": zod.string(),
  "is_admin": zod.boolean().optional(),
  "is_active": zod.boolean().default(adminCreateUserBodyIsActiveDefault)
})

export const adminCreateUserResponseIsAdminDefault = false;export const adminCreateUserResponseIsActiveDefault = true;

export const adminCreateUserResponse = zod.object({
  "id": zod.string(),
  "username": zod.string(),
  "email": zod.string().or(zod.null()).optional(),
  "full_name": zod.string().or(zod.null()).optional(),
  "is_admin": zod.boolean().optional(),
  "is_active": zod.boolean().default(adminCreateUserResponseIsActiveDefault),
  "created_at": zod.string().datetime({}).or(zod.null()).optional(),
  "updated_at": zod.string().datetime({}).or(zod.null()).optional()
})

/**
 * Update user admin status and active status - admin only
 * @summary Update User
 */
export const adminUpdateUserParams = zod.object({
  "user_id": zod.string()
})

export const adminUpdateUserBody = zod.object({
  "is_admin": zod.boolean().or(zod.null()).optional(),
  "is_active": zod.boolean().or(zod.null()).optional()
})

export const adminUpdateUserResponse = zod.any()

/**
 * Delete user - admin only
 * @summary Delete User
 */
export const adminDeleteUserParams = zod.object({
  "user_id": zod.string()
})

export const adminDeleteUserResponse = zod.any()

